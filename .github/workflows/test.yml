name: Test VerBeat Implementations

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test-python:
    name: Test Python Implementation
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.12', '3.11']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Configure Git for testing
      run: |
        git config --global user.name "Test User"
        git config --global user.email "test@example.com"
    
    - name: Run tests
      working-directory: implementations/python
      run: make test

    - name: Update version.json
      run: |
        cd implementations/python
        version=$(python -c "import sys; sys.path.insert(0, '../..'); from verbeat import get_version; print(get_version('../..'))")
        echo "{\"version\": \"$version\"}" > ../../version.json
        echo "Updated version.json with: $version"

  test-nodejs:
    name: Test Node.js Implementation
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: ['20', '18']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Configure Git for testing
      run: |
        git config --global user.name "Test User"
        git config --global user.email "test@example.com"
    
    - name: Run tests
      working-directory: implementations/nodejs
      run: make test

  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install linting tools
      run: |
        python -m pip install flake8 black
    
    - name: Lint Python code
      working-directory: implementations/python
      run: |
        flake8 verbeat.py test_verbeat.py test_git_edge_cases.py
        black --check verbeat.py test_verbeat.py test_git_edge_cases.py
    
    - name: Check Makefile
      working-directory: implementations/python
      run: |
        make help
        make clean

  deploy:
    name: Deploy Website
    runs-on: ubuntu-latest
    needs: [test-python, test-nodejs, lint]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: .
        publish_branch: gh-pages
        force_orphan: true 